#!/bin/bash
####################################################### bashrc

####################################################### Source the dotfiles
# Note: use shell/xauto to automatically start xorg-server when logging in
for file in ${XDG_CONFIG_HOME:=$HOME/.config}/{shell/functions,shell/path,shell/colors,shell/exports,bashrc/exports,bashrc/prompt,shell/aliases}; do
    [ -r "$file" ] && [ -f "$file" ] && . "$file"
done;
unset file;

for file in ${HOME}/local/bin/resolution_tty; do
    [ -r "$file" ] && [ -f "$file" ] && . "$file"
done;
unset file;


####################################################### General settings
# Append to the history file, don't overwrite it
shopt -s histappend;
# Check window size constantly
shopt -s checkwinsize
# Use globstar '**'
shopt -s globstar
shopt -s autocd
# Auto-correct typos in path names when using 'cd'
shopt -s cdspell
# Case-insensitive globbing
#shopt -s nocaseglob
# Shut up the annoying bell
if [ -f /usr/bin/setterm ]; then
    if setterm blength 0 &>/dev/null; then setterm blength 0; fi
fi;

# Add tab completion for many Bash commands
if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
elif [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
fi

# configure git
if [ -f ${XDG_CONFIG_HOME:=$HOME/.config}/USERINFO ]; then
	source ${XDG_CONFIG_HOME:=$HOME/.config}/USERINFO
	git config --global user.name "$GITUSER"
	git config --global user.email "$GITMAIL"
fi


####################################################### Welcome helpers
# Get some informations about the system
_hostinfo () {
    echo -e "${sand}Host: \t\t\t\t ${blue}${HOSTNAME}"
    echo -e "${sand}Operating System: \t\t${blue}" `uname -s`
    echo -e "${sand}Kernel Information: \t\t${blue}" `uname -mr`
    echo -ne "${sand}Hello ${magenta}$USER${sand} today is: \t${blue}" `date`;
    echo -e "${reset}";
}
# Get the mounted drives and free space
_mounted () {
    echo "-------------------------------- Mounted Drives --------------------------------"
    df -h -x tmpfs -x devtmpfs --output=source,target,fstype,size,used,pcent,avail
}
# Check free memory ((uses $OS set in .aliases))
_meminfo () {
    echo "------------------------------ Memory Information ------------------------------"
    command -v free &> /dev/null && free -th
}
# Look at uptime
_upinfo () {
    echo "------------------------------------ Uptime ------------------------------------"
    echo -ne "Uptime for: ${HOSTNAME} is "; uptime | awk /'up/ {print $3,$4,$5,$6,$7,$8,$9,$10}'
}


####################################################### Welcome Screen
# clear
echo -e "${magenta}+++++++++++++++++++++++++++++++++${reset}${bold} W E L C O M E ${reset}${magenta}++++++++++++++++++++++++++++++++"; echo "";
sleep 0.5s;
command -v neofetch &> /dev/null && neofetch || _hostinfo;
cal -3
echo -ne "${green}"; _mounted; echo -ne "${reset}"
echo -ne "${sand}"; _meminfo; echo -ne "${reset}"
echo -ne "${blue}"; _upinfo;  echo "${reset}"
echo "";
echo -e  "${blue}${HOSTNAME}${reset} at your service";

unset _hostinfo;
unset _mounted;
unset _meminfo;
unset _upinfo;
####################################################### END bash profile

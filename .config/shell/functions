# -*- mode: Shell-script;-*-
####################################################### Shell functions
# Determine size of a file or total size of a directory
fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh;
	else
		local arg=-sh;
	fi
	if [[ -n "$@" ]]; then
		du $arg -- "$@";
	else
		du $arg .[^.]* ./*;
	fi;
}
# UTF-8 encode a unicode string
escape() {
	printf "\\\x%s" $(printf "$@" | xxd -p -c1 -u);
	# print a new line unless there is a pipe to another program
	if [ -t 1 ]; then
		echo "";
	fi;
}
# Decode Unicode escape sequences
unidecode() {
	perl -e "binmode(STDOUT, ':utf8'); print \"$@\"";
	# print a new line unless there is a pipe to another program
	if [ -t 1 ]; then
		echo "";
	fi;
}
# Get a characterâ€™s Unicode code point
codepoint() {
	perl -e "use utf8; print sprintf('U+%04X', ord(\"$@\"))";
	# print a new line unless there is a pipe to another program
	if [ -t 1 ]; then
		echo "";
	fi;
}

# Fuzzy-find magic
open_with_fzf() {
    fd -t f -H -I | fzf -m --preview="xdg-mime query default {}" | xargs -ro -d "\n" xdg-open 2>&-
}

cd_with_fzf() {
    cd $HOME && cd "$(fd -t d | fzf --preview="tree -L 1 {}" --bind="space:toggle-preview" --preview-window=:hidden)"
}

pacs() {
    sudo pacman -Syy $(pacman -Ssq | fzf -m --preview="pacman -Si {}" --preview-window=:hidden --bind=space:toggle-preview)
}

#!/bin/zsh
################################################################ Z-shell prompt

### Formats
zusername_format='%(!.%F{1}%n%f.%F{5}%n%f)'
if [[ "${SSH_TTY}" ]]; then
    zhostname_format='%B%F{12}%M%f%b'
else
    zhostname_format='%F{4}%M%f'
fi;
zpath_format='%F{2}%~%f'
zendian_format='%(?.$.%F{5}$%f) '

### git integration
autoload -Uz vcs_info
precmd_vcs_info() { vcs_info }
precmd_functions+=( precmd_vcs_info )

zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:git*' formats "#%F{11}%b%f%F{105}%m%f"
zstyle ':vcs_info:git*' stagedstr "+"
zstyle ':vcs_info:git*' unstagedstr "!"
zstyle ':vcs_info:git*+set-message:*' hooks git-status-signs
function +vi-git-status-signs() {
    # Signify git-status in misc (%m)
    # using staged/unstaged status (%c%u) and additional custom checks
    local status_sign
    status_sign=""
    # Staged file
    status_sign+=${hook_com[staged]}
    # Unstaged file
    status_sign+=${hook_com[unstaged]}
    # Untracked files
    if [[ $(git rev-parse --is-inside-work-tree 2> /dev/null) == 'true' ]] && \
           git status --porcelain | grep '??' &>/dev/null; then
        status_sign+='?'
    fi
    # Write to misc
    [ -n "${status_sign}" ] && hook_com[misc]="[${status_sign}]"
}

### Definition
setopt prompt_subst
PROMPT='${zusername_format}@${zhostname_format}:${zpath_format}${vcs_info_msg_0_}${zendian_format}'

PS2="%F{11}â†’%f ";
export PS2;

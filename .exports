#!/bin/bash
####################################################### Bash exports
### prefer Terminal alacritty or xterm-256color
if infocmp alacritty >/dev/null 2>&1; then
    export TERM='alacritty';
elif infocmp xterm-256color >/dev/null 2>&1; then
    export TERM='xterm-256color';
elif [[ $COLORTERM = gnome-* && $TERM = xterm* ]] && infocmp gnome-256color >/dev/null 2>&1; then
	  export TERM='gnome-256color';
fi;

### Color palette (no export, color variables restricted to current shell)
if tput setaf 1 &> /dev/null; then
    tput sgr0; # reset
    bold=$(tput bold);
    reset=$(tput sgr0);
    # Custom color palette (see .dircolors)
    black=$(tput setaf 232);
    white=$(tput setaf 255);
    red=$(tput setaf 160);
    green=$(tput setaf 36);
    yellow=$(tput setaf 214);   # on some screens ~ light yellow, if so take 220/222
    blue=$(tput setaf 69);      # on some screens ~ dark blue, if so take 27
    magenta=$(tput setaf 198);  # on some screens ~ dark red, if so take 162
    cyan=$(tput setaf 44);
    orange=$(tput setaf 215);
    purple=$(tput setaf 63);    # on some screens ~ dark blue, if so take 19
    grey=$(tput setaf 239);
    br_red=$(tput setaf 161);
    br_green=$(tput setaf 42);
    br_yellow=$(tput setaf 214);   # on some screens ~ yellow, if so take 220
    br_blue=$(tput setaf 63);      # on some screens too dark, if so take 19
    br_magenta=$(tput setaf 162);  # on some screens ~ dark red, if so take 198
    br_cyan=$(tput setaf 51);
    br_orange=$(tput setaf 202);
    br_purple=$(tput setaf 57);
    grep_clr="1;38;5;162";
    ls_clr=$blue;

else
    bold='';
    reset="\e[0m";
    black="\e[1;38;5;232m";
    white="\e[1;38;5;255m";
    red="\e[1;38;5;196m";
    green="\e[1;38;5;036m";
    yellow="\e[1;38;5;222m";
    blue="\e[1;38;5;069m";
    magenta="\e[1;38;5;198m";
    cyan="\e[1;38;5;045m";
    orange="\e[1;38;5;215m";
    purple="\e[1;38;5;063m";
    grey="\e[1;38;5;239m";
    br_red="\e[1;38;5;161m";
    br_green="\e[1;38;5;035m";
    br_yellow="\e[1;38;5;220m";
    br_blue="\e[1;38;5;063m";
    br_magenta="\e[1;38;5;198m";
    br_cyan="\e[1;38;5;051m"
    br_orange="\e[1;38;5;202m";
    br_purple="\e[1;38;5;057m";
    grep_clr="1;38;5;162";
    ls_clr=$blue
fi;

        
### Bash settings exports
# Don't put duplicates or lines starting with space in the history
export HISTCONTROL='ignoreboth'
# Increase Bash history size to 16Â³ entries
export HISTSIZE=4096
export HISTFILESIZE=$HISTSIZE
# Language settings
export LANG='en_US.UTF-8'
export LC_ALL='en_US.UTF-8'
# Editors
export EMACS='emacs'
export EMACSCLIENT='emacsclient'
export EMACS_SERVER_FILE="$HOME/.emacs.d/server/server"
export EMACS_SOCKET_NAME="$HOME/.emacs.d/server/server"
export ALTERNATE_EDITOR=""
export EDITOR="$EMACSCLIENT -t -s $EMACS_SERVER_FILE"
export VISUAL="$EMACSCLIENT -c -s $EMACS_SERVER_FILE -a $EMACS"
# Less settings
export LESS_TERMCAP_md="$ls_clr"
export GREP_COLOR="$grep_clr"

### Programming environments
# C Compilers
#export CC=gcc-6
#export CXX=g++-6

# Python
export PYTHONIOENCODING='UTF-8'

# OpenMP
export GOMP_STACKSIZE=16384

# Mono
export MONO_GAC_PREFIX="/usr/local"

# BOOST
export BOOST_ROOT="$HOME/local/boost/boost"

# XERCES-C
export XERCES_LIBS="-L$HOME/local/xerces/build/lib"
export XERCES_CFLAGS="-I$HOME/local/xerces/build/include"

# UDUNITS
export UDUNITS_LIBS="-L$HOME/local/udunits/build/lib"
export UDUNITS_CFLAGS="-I$HOME/local/udunits/build/include"

# CFITSIO
export CFITSIO_LIBS="-L$HOME/local/cfitsio/build/lib"
export CFITSIO_CFLAGS="-I$HOME/local/cfitsio/build/include"



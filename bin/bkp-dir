#!/bin/bash

# Defaults
BKP_DIR=/data/backups
MACHINE="$(uname -n)"
SSH_HOST=phdenzel@ygdrasil
FLAGS=av

DOCS_DIR=""
MAIL_DIR=""
MUSIC_DIR=""
PICTURES_DIR=""
ORG_DIR=""

# parse options
while [ $# -ge 1 ]; do
    case "$1" in
        -d|--drive-name)
            BKP_DIR="$2"
            shift
            ;;
        -s|--ssh-host)
            SSH_HOST="$2"
            shift
            ;;
        -m|--machine)
            MACHINE="$2"
            shift
            ;;
        -n|--dry-run)
            FLAGS=avn
            ;;
        --docs)
            DOCS_DIR="$HOME/Documents"
            ;;
        --mail)
            MAIL_DIR="$HOME/Mail"
            ;;
        --music)
            MUSIC_DIR="$HOME/Music"
            ;;
        --pics|--pictures)
            PICTURES_DIR="$HOME/Pictures"
            ;;
        --org)
            ORG_DIR="$HOME/org"
            ;;
        -h|--help)
            echo "Usage: bkp-dir [directory]"
            echo "               [-s|--ssh-host] [-m|--machines] [-n|--dry-run]"
            echo "               [--docs] [--mail] [--music] [--pics|--pictures]"
            echo "               [--help]"
            echo ""
            echo "A program to backup important files to my server"
            exit 1
            ;;
        *)
            # unknown option
            ;;
    esac
    shift # past argument or value
done


echo -e "Target Backup directory:\t $BKP_DIR"
echo -e "Flags:\t -$FLAGS"

if [ ! -z "$DOCS_DIR" ]; then
    [ -e "$DOCS_DIR" ] && echo -e "\n# Backing up $DOCS_DIR"
    [ -e "$DOCS_DIR" ] && [ ! -z "$SSH_HOST" ] && ssh $SSH_HOST "mkdir -p $BKP_DIR/$MACHINE/$(dirname "$DOCS_DIR")"
    [ -e "$DOCS_DIR" ] && rsync -$FLAGS "$DOCS_DIR" "$SSH_HOST:$BKP_DIR/$MACHINE/$DOCS_DIR"    
fi

if [ ! -z "$MAIL_DIR" ]; then
    [ -e "$MAIL_DIR" ] && echo -e "\n# Backing up $MAIL_DIR"
    [ -e "$MAIL_DIR" ] && [ ! -z "$SSH_HOST" ] && rsync -$FLAGS "$MAIL_DIR" "$SSH_HOST:$BKP_DIR/$(basename "$MAIL_DIR")"
fi

if [ ! -z "$PICTURES_DIR" ]; then
    [ -e "$PICTURES_DIR" ] && echo -e "\n# Backing up $PICTURES_DIR"
    [ -e "$PICTURES_DIR" ] && [ ! -z "$SSH_HOST" ] && rsync -$FLAGS "$PICTURES_DIR" "$SSH_HOST:$BKP_DIR/$(basename "$PICTURES_DIR")"
fi

if [ ! -z "$MUSIC_DIR" ]; then
    [ -e "$MUSIC_DIR" ] && echo -e "\n# Backing up $MUSIC_DIR"
    [ -e "$MUSIC_DIR" ] && [ ! -z "$SSH_HOST" ] && rsync -$FLAGS "$MUSIC_DIR" "$SSH_HOST:$BKP_DIR/$(basename "$MUSIC_DIR")"
    
fi

if [ ! -z "$ORG_DIR" ]; then
    [ -e "$ORG_DIR" ] && echo -e "\n# Backing up $ORG_DIR"
    [ -e "$ORG_DIR" ] && [ ! -z "$SSH_HOST" ] && ssh $SSH_HOST "mkdir -p $BKP_DIR/$MACHINE/$(dirname "$ORG_DIR")"
    [ -e "$ORG_DIR" ] && rsync -$FLAGS "$ORG_DIR" "$SSH_HOST:$BKP_DIR/$MACHINE/$ORG_DIR"
fi

# sync etc
# for f in /etc/{fstab,hostname,hosts,mkinitcpio.conf,default/grub,default/grub-btrfs/config,pacman.d/mirrorlist,pacman.d/hooks/nvidia.hook}; do
#     [ -e $f ] && echo -e "\n# Backing up $f";
#     [ -e $f ] && ssh $SSH_HOST "mkdir -p $BKPDIR$(dirname $f)"
#     [ -e $f ] && rsync -$FLAGS $f $SSH_HOST:$BKPDIR/"$(dirname $f)"
# done
